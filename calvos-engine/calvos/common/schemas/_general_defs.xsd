<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="calvos" elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:clv="calvos">






    <xs:simpleType name="t_instances">
    	<xs:annotation>
    		<xs:documentation>
    			Allowed instances of the given component in a project.
    			**Format**: _initial_number_ &lt;,&gt;
    			&lt;_final_number_&gt; Note: _initial_number_ and
    			_final_number_ shall be greater than zero.

    			**Examples**: a) 1 -- Only one instance allowed b) 1, --
    			One or more instances allowed c) 1, 5 -- From 1 to 5
    			allowed instances d) 3 -- Exactly 3 instances allowed
    			(no more, no less)
    		</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string"></xs:restriction>
    </xs:simpleType>


    <xs:simpleType name="t_basicType">
    	<xs:annotation>
    		<xs:documentation>
    			Parameter type. Based on python basic data types.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:restriction base="xs:string">
    		<xs:enumeration value="int"></xs:enumeration>
    		<xs:enumeration value="float"></xs:enumeration>
    		<xs:enumeration value="str"></xs:enumeration>
    		<xs:enumeration value="list"></xs:enumeration>
    		<xs:enumeration value="boolean"></xs:enumeration>
    		<xs:enumeration value="dict"></xs:enumeration>
    		<xs:enumeration value="ref"></xs:enumeration>
    		<xs:enumeration value="cid"></xs:enumeration>
    		<xs:enumeration value="enum"></xs:enumeration>
    		<xs:enumeration value="path"></xs:enumeration>
    	</xs:restriction>
    </xs:simpleType>

    <xs:complexType name="t_paramDef">
    	<xs:annotation>
    		<xs:documentation>
    			Type for parameter definition.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:sequence>
    		<xs:element name="Title" type="clv:t_title" minOccurs="1"
    			maxOccurs="1">
    		</xs:element>
    		<xs:element name="Desc" type="xs:string" minOccurs="1"
    			maxOccurs="1">
    			<xs:annotation>
    				<xs:documentation>
    					Description. Can use markdown syntax.
    				</xs:documentation>
    			</xs:annotation>
    		</xs:element>
    		<xs:element name="Default" type="xs:string" minOccurs="1"
    			maxOccurs="1">
    		</xs:element>
    		<xs:element name="Enumeration" type="clv:t_simpleEnum"
    			maxOccurs="1" minOccurs="0">
    		</xs:element>
    		<xs:element name="Reference" type="clv:t_reference"
    			maxOccurs="1" minOccurs="0">
    		</xs:element>
    	</xs:sequence>
    	<xs:attribute name="id" type="clv:t_cIdentifier"
    		use="required">
    	</xs:attribute>
    	<xs:attribute name="type" type="clv:t_basicType"
    		use="required">
    	</xs:attribute>
    	<xs:attribute name="subtype" type="clv:t_basicType"
    		use="optional">
    	</xs:attribute>
    	<xs:attribute name="category" type="xs:string" use="optional"></xs:attribute>
    	<xs:attribute name="is_optional" type="xs:boolean"
    		use="optional">
    	</xs:attribute>
    	<xs:attribute name="is_advanced" type="xs:boolean"
    		use="optional">
    	</xs:attribute>
    	<xs:attribute name="is_read_only" type="xs:boolean"
    		use="optional">
    	</xs:attribute>
    	<xs:attribute name="validator" type="xs:string" use="optional"></xs:attribute>
    </xs:complexType>

    <xs:simpleType name="t_cIdentifier">
        <xs:annotation>
        	<xs:documentation>Type to model a valid C-language identifier syntax.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
    		<xs:pattern value="[a-zA-Z_][a-zA-Z0-9_]*"></xs:pattern>
    	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="t_pyModule">
    	<xs:restriction base="xs:string">
    		<xs:pattern value="([\w_])+(\.[\w_]+)*"></xs:pattern>
    	</xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="t_title">
        <xs:annotation>
        	<xs:documentation>Type to model a title. A valid title shall habe at least one word.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
    		<xs:pattern value="\s*\w+[\s\S]*"></xs:pattern>
    	</xs:restriction>
    </xs:simpleType>

    <xs:complexType name="t_paramsDefs">
    	<xs:annotation>
    		<xs:documentation>
    			Models a set of parameters.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:sequence>
    		<xs:element name="Categories" type="clv:t_categories" maxOccurs="1" minOccurs="0">
    		</xs:element>
    		<xs:element name="ParamDefinition" type="clv:t_paramDef" maxOccurs="unbounded" minOccurs="0"></xs:element>
    	</xs:sequence>
    </xs:complexType>

    <xs:complexType name="t_category">
    	<xs:annotation>
    		<xs:documentation>
    			Models a category for a parameter.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:sequence>
    		<xs:element name="Title" type="clv:t_title" maxOccurs="1"
    			minOccurs="1">
    		</xs:element>
    		<xs:element name="Desc" type="xs:string" maxOccurs="1"
    			minOccurs="0">
    		</xs:element>
    	</xs:sequence>
    	<xs:attribute name="id" type="clv:t_cIdentifier"
    		use="required">
    	</xs:attribute>
    	<xs:attribute name="is_subcategory_of" type="clv:t_cIdentifier" use="optional"></xs:attribute>
    </xs:complexType>

    <xs:complexType name="t_commonMetadata">
    	<xs:sequence>
    		<xs:element name="TemplateId" type="xs:string" maxOccurs="1" minOccurs="1">
    		</xs:element>
    		<xs:element name="TemplateVer" type="xs:string" maxOccurs="1" minOccurs="1">
    		</xs:element>
    		<xs:element name="TemplateTitle" type="xs:string" maxOccurs="1" minOccurs="0">
    		</xs:element>
    		<xs:element name="TemplateDesc" type="xs:string" maxOccurs="1" minOccurs="0">
    		</xs:element>
    		<xs:element name="TemplateDate" type="xs:string" maxOccurs="1" minOccurs="0">
    		</xs:element>
    		<xs:element name="Schema" type="clv:t_schemaInfo" maxOccurs="1" minOccurs="1"></xs:element>
    	</xs:sequence>
    </xs:complexType>

    <xs:complexType name="t_metadata">
    	<xs:sequence>
    		<xs:element name="Metadata" type="clv:t_commonMetadata" maxOccurs="1" minOccurs="1">
    		</xs:element>
    		<xs:any></xs:any>
    	</xs:sequence>
    </xs:complexType>

    <xs:complexType name="t_schemaInfo">
    	<xs:attribute name="id" type="clv:t_cIdentifier" use="required" fixed="general_defs_xsd"></xs:attribute>
    	<xs:attribute name="ver" type="xs:string" fixed="0.0.1" use="required"></xs:attribute>
    </xs:complexType>

    <xs:complexType name="t_componentDef">
    	<xs:sequence>
    		<xs:element name="Title" type="clv:t_title" maxOccurs="1" minOccurs="1">
    		</xs:element>
    		<xs:element name="Desc" type="xs:string" maxOccurs="1" minOccurs="1">
    		</xs:element>
    		<xs:element name="ParamsDefinitions" type="clv:t_paramsDefs" maxOccurs="1" minOccurs="0"></xs:element>
    	</xs:sequence>
    	<xs:attribute name="module" type="clv:t_pyModule" use="required"></xs:attribute>
    	<xs:attribute name="instances" type="clv:t_instances" use="required"></xs:attribute>
    </xs:complexType>

    <xs:complexType name="t_componentsDefs">
    	<xs:sequence>
    		<xs:element name="ComponentDefinition" type="clv:t_componentDef" maxOccurs="unbounded" minOccurs="0"></xs:element>
    	</xs:sequence>
    </xs:complexType>

    <xs:complexType name="t_categories">
    	<xs:sequence>
    		<xs:element name="Category" type="clv:t_category" maxOccurs="unbounded" minOccurs="1"></xs:element>
    	</xs:sequence>
    </xs:complexType>

    <xs:complexType name="t_reference">
    	<xs:annotation>
    		<xs:documentation>
    			Type for referencing a parameter.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:attribute name="target_component" type="clv:t_pyModule"
    		use="required">
    		<xs:annotation>
    			<xs:documentation>
    				Name of the target component (target python module
    				defining the referred parameter).
    			</xs:documentation>
    		</xs:annotation>
    	</xs:attribute>
    	<xs:attribute name="target_param_id" type="clv:t_cIdentifier" use="required"></xs:attribute>
    </xs:complexType>

    

    <xs:complexType name="t_Enum">
    	<xs:sequence>
    		<xs:element name="Title" type="clv:t_title" maxOccurs="1"
    			minOccurs="0">
    		</xs:element>
    		<xs:element name="Desc" type="xs:string" maxOccurs="1"
    			minOccurs="0">
    		</xs:element>
    		<xs:element name="EnumValue" type="clv:t_EnumValue" maxOccurs="unbounded" minOccurs="1"></xs:element>
    	</xs:sequence>
    	<xs:attribute name="id" type="clv:t_cIdentifier"
    		use="required">
    	</xs:attribute>
    </xs:complexType>

    <xs:complexType name="t_EnumValue">
    	<xs:attribute name="number" type="xs:int" use="optional"></xs:attribute>
    	<xs:attribute name="is_default" type="xs:boolean" use="optional"></xs:attribute>
    </xs:complexType>

    <xs:complexType name="t_simpleEnum">
    	<xs:annotation>
    		<xs:documentation>
    			Models an enumeration type. Expects a string with
    			format: symbol1 (val1), symbol2 (val2), .... symbolN
    			(valN) Element (valX) is optional so it can be
    			individually for each item. If default is not or it is
    			invalid as per the defined enumerated then first item
    			will be taken.
    		</xs:documentation>
    	</xs:annotation>
    	<xs:simpleContent>
    		<xs:extension base="xs:string">
    			<xs:attribute name="id" type="clv:t_cIdentifier" use="optional"></xs:attribute>
    			<xs:attribute name="default" type="xs:string" use="optional"></xs:attribute>
    		</xs:extension>
    	</xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="t_codegen">
    	<xs:all>
    		<xs:element name="Prefix" type="xs:string" maxOccurs="1"
    			minOccurs="0">
    		</xs:element>
    		<xs:element name="Suffix" type="xs:string"></xs:element>
    		<xs:element name="OwnName" type="clv:t_cIdentifier"></xs:element>
    	</xs:all>


    	<xs:attribute name="generate" type="xs:boolean" use="optional" default="true"></xs:attribute>
    </xs:complexType>
</xs:schema>